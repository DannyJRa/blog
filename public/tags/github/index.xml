<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GitHub on </title>
    <link>/tags/github/</link>
    <description>Recent content in GitHub on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 14 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/github/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Blog JSON4</title>
      <link>/post/github_rest_api4/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/github_rest_api4/</guid>
      <description>Working with JSON library(tidyverse)  ── Attaching packages ─────────────────────────────────────────────────────────────────────── tidyverse 1.2.1 ──  ✔ ggplot2 3.1.0 ✔ purrr 0.3.2 ✔ tibble 2.1.1 ✔ dplyr 0.8.0.1 ✔ tidyr 0.8.3 ✔ stringr 1.4.0 ✔ readr 1.3.1 ✔ forcats 0.4.0  ── Conflicts ────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ── ✖ dplyr::filter() masks stats::filter() ✖ dplyr::lag() masks stats::lag()  library(jsonlite)  Attaching package: &#39;jsonlite&#39;  The following object is masked from &#39;package:purrr&#39;: flatten  yelp &amp;lt;- fromJSON(&amp;quot;data/yelp_academic_dataset_business.</description>
    </item>
    
    <item>
      <title>Blog JSON5</title>
      <link>/post/github_rest_api5/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/github_rest_api5/</guid>
      <description>&lt;p&gt;Linear models
The R code is:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Blog JSON</title>
      <link>/post/blog_json/</link>
      <pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/blog_json/</guid>
      <description>Working with JSON Count how restaurants Unnest a list variable   Working with JSON library(tidyverse) library(jsonlite) yelp &amp;lt;- fromJSON(&amp;quot;data/yelp_academic_dataset_business.json&amp;quot;) Error: lexical error: invalid char in json text.
 data/yelp_academic_dataset_busi (right here) ------^  However, when we run the above command we would actully get an error like below.
This is because this JSON file turned out to be something called ‘NDJSON (Newline delimited JSON)’, which means there are multiple JSON values inside this file and each of the JSON values is considered as an independent object.</description>
    </item>
    
    <item>
      <title>GitHub REST API</title>
      <link>/post/github_rest_api/</link>
      <pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/github_rest_api/</guid>
      <description>Github Repos Pagination Issues Issues    Github Repos library(jsonlite) hadley_orgs &amp;lt;- fromJSON(&amp;quot;https://api.github.com/users/hadley/orgs&amp;quot;) hadley_repos &amp;lt;- fromJSON(&amp;quot;https://api.github.com/users/dannyjra/repos&amp;quot;) gg_issues &amp;lt;- fromJSON(&amp;quot;https://api.github.com/repos/hadley/ggplot2/issues&amp;quot;) #latest commits gg_commits &amp;lt;- fromJSON(&amp;quot;https://api.github.com/repos/dannyjra/DannyJRa.github.io/commits&amp;quot;) paste(format(gg_commits$commit$committer$date), &amp;quot;:&amp;quot;, gg_commits$commit$message)  Pagination SOURCE: https://blog.exploratory.io/analyzing-issue-data-with-github-rest-api-63945017dedc
Issues library(dplyr) pages &amp;lt;- list() for(i in 1:15){ res &amp;lt;- GET(&amp;quot;https://api.github.com/repos/hadley/dplyr/issues&amp;quot;, query = list(state = &amp;quot;all&amp;quot;, per_page = 100, page = i)) jsondata &amp;lt;- content(res, type = &amp;quot;text&amp;quot;) github_df &amp;lt;- fromJSON(jsondata, flatten = TRUE) pages[[i]] &amp;lt;- github_df } issues &amp;lt;- bind_rows(pages) issues &amp;lt;- as_data_frame(issues)  Issues library(dplyr) pages &amp;lt;- list() for(i in 1:15){ res &amp;lt;- GET(&amp;quot;https://api.</description>
    </item>
    
  </channel>
</rss>