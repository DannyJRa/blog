<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>/post/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 11 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Firebase &amp; Shiny</title>
      <link>/post/firebase_shiny/</link>
      <pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/firebase_shiny/</guid>
      <description>Adding Firebase Authentication to Shiny Firebase and Shiny Benefits over building a custom solution in R Example using Firebase Authentication with Shiny    Adding Firebase Authentication to Shiny Firebase and Shiny Firebase is a mobile and web application development platform owned by Google. Firebase provides front-end solutions for authentication, database storage, object storage, messaging, and more. Firebase drastically reduces the time needed to develop certain types of highly scalable and secure applications.</description>
    </item>
    
    <item>
      <title>GitHub REST API</title>
      <link>/post/github_rest_api/</link>
      <pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/github_rest_api/</guid>
      <description>Github Repos Pagination Issues Issues    Github Repos library(jsonlite) hadley_orgs &amp;lt;- fromJSON(&amp;quot;https://api.github.com/users/hadley/orgs&amp;quot;) hadley_repos &amp;lt;- fromJSON(&amp;quot;https://api.github.com/users/dannyjra/repos&amp;quot;) gg_issues &amp;lt;- fromJSON(&amp;quot;https://api.github.com/repos/hadley/ggplot2/issues&amp;quot;) #latest commits gg_commits &amp;lt;- fromJSON(&amp;quot;https://api.github.com/repos/dannyjra/DannyJRa.github.io/commits&amp;quot;) paste(format(gg_commits$commit$committer$date), &amp;quot;:&amp;quot;, gg_commits$commit$message)  Pagination SOURCE: https://blog.exploratory.io/analyzing-issue-data-with-github-rest-api-63945017dedc
Issues library(dplyr) pages &amp;lt;- list() for(i in 1:15){ res &amp;lt;- GET(&amp;quot;https://api.github.com/repos/hadley/dplyr/issues&amp;quot;, query = list(state = &amp;quot;all&amp;quot;, per_page = 100, page = i)) jsondata &amp;lt;- content(res, type = &amp;quot;text&amp;quot;) github_df &amp;lt;- fromJSON(jsondata, flatten = TRUE) pages[[i]] &amp;lt;- github_df } issues &amp;lt;- bind_rows(pages) issues &amp;lt;- as_data_frame(issues)  Issues library(dplyr) pages &amp;lt;- list() for(i in 1:15){ res &amp;lt;- GET(&amp;quot;https://api.</description>
    </item>
    
    <item>
      <title>R-Python Bridge</title>
      <link>/post/r-python-bridge/</link>
      <pubDate>Sat, 14 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/r-python-bridge/</guid>
      <description>


&lt;p&gt;Linear models
The R code is:
</description>
    </item>
    
    <item>
      <title>Docker PostGreSQL</title>
      <link>/post/docker-postgresql/</link>
      <pubDate>Fri, 13 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/docker-postgresql/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#docker-postgresql-10-and-pgadmin-4&#34;&gt;Docker: PostgreSQL 10 and pgAdmin 4&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#run-docker-with-postgresql-container&#34;&gt;Run Docker with PostgreSQL container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#connect-to-postgres&#34;&gt;Connect to Postgres&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#access-postgresql.conf-file&#34;&gt;Access postgresql.conf file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#open-port&#34;&gt;Open port&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#run-docker-with-pgadmin-4-container&#34;&gt;Run Docker with pgAdmin 4 container&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#open-port-5050&#34;&gt;Open port 5050&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;docker-postgresql-10-and-pgadmin-4&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Docker: PostgreSQL 10 and pgAdmin 4&lt;/h1&gt;
&lt;div id=&#34;run-docker-with-postgresql-container&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Run Docker with PostgreSQL container&lt;/h2&gt;
&lt;p&gt;:smile:
Make persistent volume to store config files and database files:
d
</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/hello-r-markdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/post/hello-r-markdown/</guid>
      <description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/hello-r-markdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/post/hello-r-markdown/</guid>
      <description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
  </channel>
</rss>